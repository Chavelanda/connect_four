:- consult(alphabeta).

:-  set_prolog_flag(stack_limit, 2_147_483_648).

test_heuristic() :-
  staticval([[1,0,0,0,0,-1,0],[0,0,0,0,0,0,0],[0,0,0,0,0,0,0],[0,0,0,0,0,0,0],[0,0,0,0,0,0,0],[0,0,0,0,0,0,0]], Case1),
  Case1 is -8,
  staticval([[0,0,1,0,0,-1,0],[0,0,0,0,0,0,0],[0,0,0,0,0,0,0],[0,0,0,0,0,0,0],[0,0,0,0,0,0,0],[0,0,0,0,0,0,0]], Case2),
  Case2 is 0,
  staticval([[0,0,1,-1,-1,0,0],[0,0,0,1,0,0,0],[0,0,0,0,0,0,0],[0,0,0,0,0,0,0],[0,0,0,0,0,0,0],[0,0,0,0,0,0,0]], Case3),
  Case3 is 12,
  staticval([[1,0,0,0,0,0,-1],[0,0,0,0,0,0,0],[0,0,0,0,0,0,0],[0,0,0,0,0,0,0],[0,0,0,0,0,0,0],[0,0,0,0,0,0,0]], Case4),
  Case4 is 0,
  staticval([[1,1,0,0,0,-1,-1],[0,0,0,0,0,0,0],[0,0,0,0,0,0,0],[0,0,0,0,0,0,0],[0,0,0,0,0,0,0],[0,0,0,0,0,0,0]], Case5),
  Case5 is 0,
  staticval([[1,-1,0,0,0,1,-1],[0,0,0,0,0,0,0],[0,0,0,0,0,0,0],[0,0,0,0,0,0,0],[0,0,0,0,0,0,0],[0,0,0,0,0,0,0]], Case6),
  Case6 is 0,
  staticval([[1,-1,0,0,0,0,0],[0,1,0,0,0,0,0],[0,0,0,0,0,0,0],[0,0,0,0,0,0,0],[0,0,0,0,0,0,0],[0,0,0,0,0,0,0]], Case7),
  Case7 is 20,
  staticval([[0,0,0,0,1,1,-1],[0,0,0,0,0,-1,0],[0,0,0,0,0,0,0],[0,0,0,0,0,0,0],[0,0,0,0,0,0,0],[0,0,0,0,0,0,0]], Case8),
  Case8 is -4,
  staticval([[0,0,1,-1,0,0,0],[0,0,1,-1,0,0,0],[0,0,1,-1,0,0,0],[0,0,1,0,0,0,0],[0,0,0,0,0,0,0],[0,0,0,0,0,0,0]], Case9),
  Case9 is +1.0Inf,
  staticval([[0,0,1,1,-1,-1,0],[0,0,1,1,-1,0,0],[0,0,1,-1,0,0,0],[0,0,-1,0,0,0,0],[0,0,0,0,0,0,0],[0,0,0,0,0,0,0]], Case10),
  Case10 is -1.0Inf,
  staticval([[1,-1,1,-1,1,-1,1],[1,-1,1,-1,1,-1,1],[1,-1,1,-1,1,-1,1],[-1,1,-1,1,-1,1,-1],[-1,1,-1,1,-1,1,-1],[-1,1,-1,1,-1,1,-1]], Case11),
  Case11 is 0.

test_end_game() :-
  moves([[1,0,0,0,0,-1,0],[0,0,0,0,0,0,0],[0,0,0,0,0,0,0],[0,0,0,0,0,0,0],[0,0,0,0,0,0,0],[0,0,0,0,0,0,0]], PosList1),
  \+ PosList1 = [],
  moves([[0,0,1,0,0,-1,0],[0,0,0,0,0,0,0],[0,0,0,0,0,0,0],[0,0,0,0,0,0,0],[0,0,0,0,0,0,0],[0,0,0,0,0,0,0]], PosList2),
  \+ PosList2 = [],
  moves([[0,0,1,-1,-1,0,0],[0,0,0,1,0,0,0],[0,0,0,0,0,0,0],[0,0,0,0,0,0,0],[0,0,0,0,0,0,0],[0,0,0,0,0,0,0]], PosList3),
  \+ PosList3 = [],
  moves([[1,0,0,0,0,0,-1],[0,0,0,0,0,0,0],[0,0,0,0,0,0,0],[0,0,0,0,0,0,0],[0,0,0,0,0,0,0],[0,0,0,0,0,0,0]], PosList4),
  \+ PosList4 = [],
  moves([[1,1,0,0,0,-1,-1],[0,0,0,0,0,0,0],[0,0,0,0,0,0,0],[0,0,0,0,0,0,0],[0,0,0,0,0,0,0],[0,0,0,0,0,0,0]], PosList5),
  \+ PosList5 = [],
  moves([[1,-1,0,0,0,1,-1],[0,0,0,0,0,0,0],[0,0,0,0,0,0,0],[0,0,0,0,0,0,0],[0,0,0,0,0,0,0],[0,0,0,0,0,0,0]], PosList6),
  \+ PosList6 = [],
  moves([[1,-1,0,0,0,0,0],[0,1,0,0,0,0,0],[0,0,0,0,0,0,0],[0,0,0,0,0,0,0],[0,0,0,0,0,0,0],[0,0,0,0,0,0,0]], PosList7),
  \+ PosList7 = [],
  moves([[0,0,0,0,1,1,-1],[0,0,0,0,0,-1,0],[0,0,0,0,0,0,0],[0,0,0,0,0,0,0],[0,0,0,0,0,0,0],[0,0,0,0,0,0,0]], PosList8),
  \+ PosList8 = [],
  moves([[0,0,1,-1,0,0,0],[0,0,1,-1,0,0,0],[0,0,1,-1,0,0,0],[0,0,1,0,0,0,0],[0,0,0,0,0,0,0],[0,0,0,0,0,0,0]], PosList9),
  PosList9 = [],
  moves([[0,0,1,1,-1,-1,0],[0,0,1,1,-1,0,0],[0,0,1,-1,0,0,0],[0,0,-1,0,0,0,0],[0,0,0,0,0,0,0],[0,0,0,0,0,0,0]], PosList10),
  PosList10 = [],
  moves([[-1,1,1,-1,1,-1,-1],[0,1,0,0,-1,-1,0],[0,1,0,0,0,1,0],[0,1,0,0,0,0,0],[0,0,0,0,0,0,0],[0,0,0,0,0,0,0]], PosList11),
  PosList11 = [],
  moves([[1,-1,1,-1,1,-1,1],[1,-1,1,-1,1,-1,1],[1,-1,1,-1,1,-1,1],[-1,1,-1,1,-1,1,-1],[-1,1,-1,1,-1,1,-1],[-1,1,-1,1,-1,1,-1]], PosList12),
  PosList12 = [].

test_alpha_beta1() :-
  alphabeta([[-1,1,1,-1,1,-1,-1],[0,1,0,0,-1,-1,0],[0,1,0,0,0,1,0],[0,0,0,0,0,0,0],[0,0,0,0,0,0,0],[0,0,0,0,0,0,0]], -1.0Inf, +1.0Inf, BestPos, Val, 0, 1),
  BestPos = [[-1,1,1,-1,1,-1,-1],[0,1,0,0,-1,-1,0],[0,1,0,0,0,1,0],[0,1,0,0,0,0,0],[0,0,0,0,0,0,0],[0,0,0,0,0,0,0]],
  Val is +1.0Inf,
  write(BestPos),
  write(Val).

test_alpha_beta2() :-
  alphabeta([[-1,1,1,-1,1,-1,-1],[0,1,0,0,-1,-1,0],[0,1,0,0,0,1,0],[0,0,0,0,0,0,0],[0,0,0,0,0,0,0],[0,0,0,0,0,0,0]], -1.0Inf, +1.0Inf, BestPos, Val, 0, 7),
  BestPos = [[-1,1,1,-1,1,-1,-1],[0,1,0,0,-1,-1,0],[0,1,0,0,0,1,0],[0,1,0,0,0,0,0],[0,0,0,0,0,0,0],[0,0,0,0,0,0,0]],
  Val is +1.0Inf,
  write(BestPos),
  write(Val).

test_alpha_beta3() :-
  alphabeta([[1,-1,1,-1,1,-1,1],[1,-1,1,-1,1,-1,1],[1,-1,1,-1,1,-1,1],[-1,1,-1,1,-1,1,-1],[-1,1,-1,1,-1,1,-1],[0,1,-1,0,-1,1,0]], -1.0Inf, 1.0Inf, BestPos, Val, 0, 7),
  write(BestPos),
  write(Val).
